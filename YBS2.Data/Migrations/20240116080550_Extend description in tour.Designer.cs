// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YBS2.Data.Context;

#nullable disable

namespace YBS2.Data.Migrations
{
    [DbContext(typeof(YBS2Context))]
    [Migration("20240116080550_Extend description in tour")]
    partial class Extenddescriptionintour
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("YBS2.Data.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("DurationUnit")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<int>("TotalPassengers")
                        .HasColumnType("int");

                    b.Property<Guid>("TourId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TourType")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("isIncludeBooker")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("TourId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.BookingActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("BookingActivity", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HotLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("LinkedInURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Dock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Dock", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("AvatarURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("MemberSinceDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Member", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.MembershipPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<float>("DiscountPercent")
                        .HasColumnType("real");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("DurationUnit")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MembershipPackage", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.MembershipRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceToken")
                        .HasColumnType("nvarchar(255)");

                    b.Property<float?>("DiscountPercent")
                        .HasColumnType("real");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MembershipExpireDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("MembershipPackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MembershipStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId");

                    b.HasIndex("MembershipPackageId");

                    b.ToTable("MembershipRegistration", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Notitoken", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoggedinDevice")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Notitoken", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Passenger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentityNumber")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Passenger", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.ServicePackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ServicePackage", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.ServicePackageItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicePackageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("ServicePackageId");

                    b.ToTable("ServicePackageItem", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Tour", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("DurationUnit")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaximumGuest")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("YachtId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("YachtId");

                    b.ToTable("Tour", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.TourActivity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TourId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourActivity", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.TourDock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TourId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DockId");

                    b.HasIndex("TourId");

                    b.ToTable("TourDock", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.TourServicePackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicePackageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TourId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ServicePackageId");

                    b.HasIndex("TourId");

                    b.ToTable("TourServicePackage", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BankTranNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("MembershipRegistrationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.Property<float>("TotalAmount")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("VNPayCode")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("MembershipRegistrationId")
                        .IsUnique()
                        .HasFilter("[MembershipRegistrationId] IS NOT NULL");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.UpdateRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ApproverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FacebookURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("HotLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("InstagramURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LinkedInURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("CompanyId");

                    b.ToTable("UpdateRequest", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberId")
                        .IsUnique();

                    b.ToTable("Wallet", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Yacht", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BEAM")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Cabin")
                        .HasColumnType("int");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DRAFT")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LOA")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalCrew")
                        .HasColumnType("int");

                    b.Property<int>("TotalPassenger")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Yacht", (string)null);
                });

            modelBuilder.Entity("YBS2.Data.Models.Booking", b =>
                {
                    b.HasOne("YBS2.Data.Models.Member", "Member")
                        .WithMany("Bookings")
                        .HasForeignKey("MemberId");

                    b.HasOne("YBS2.Data.Models.Tour", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("YBS2.Data.Models.BookingActivity", b =>
                {
                    b.HasOne("YBS2.Data.Models.Booking", "Booking")
                        .WithMany("BookingActivities")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YBS2.Data.Models.Company", b =>
                {
                    b.HasOne("YBS2.Data.Models.Account", "Account")
                        .WithOne("Company")
                        .HasForeignKey("YBS2.Data.Models.Company", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("YBS2.Data.Models.Dock", b =>
                {
                    b.HasOne("YBS2.Data.Models.Company", "Company")
                        .WithMany("Docks")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS2.Data.Models.Member", b =>
                {
                    b.HasOne("YBS2.Data.Models.Account", "Account")
                        .WithOne("Member")
                        .HasForeignKey("YBS2.Data.Models.Member", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("YBS2.Data.Models.MembershipRegistration", b =>
                {
                    b.HasOne("YBS2.Data.Models.Member", "Member")
                        .WithMany("MembershipRegistrations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS2.Data.Models.MembershipPackage", "MembershipPackage")
                        .WithMany("MembershipRegistrations")
                        .HasForeignKey("MembershipPackageId");

                    b.Navigation("Member");

                    b.Navigation("MembershipPackage");
                });

            modelBuilder.Entity("YBS2.Data.Models.Notitoken", b =>
                {
                    b.HasOne("YBS2.Data.Models.Account", "Account")
                        .WithMany("Notitokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("YBS2.Data.Models.Passenger", b =>
                {
                    b.HasOne("YBS2.Data.Models.Booking", "Booking")
                        .WithMany("Passengers")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("YBS2.Data.Models.ServicePackage", b =>
                {
                    b.HasOne("YBS2.Data.Models.Company", "Company")
                        .WithMany("ServicePackages")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS2.Data.Models.ServicePackageItem", b =>
                {
                    b.HasOne("YBS2.Data.Models.Service", "Service")
                        .WithMany("ServicePackageItems")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS2.Data.Models.ServicePackage", "ServicePackage")
                        .WithMany("ServicePackageItems")
                        .HasForeignKey("ServicePackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("ServicePackage");
                });

            modelBuilder.Entity("YBS2.Data.Models.Tour", b =>
                {
                    b.HasOne("YBS2.Data.Models.Company", "Company")
                        .WithMany("Tours")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("YBS2.Data.Models.Yacht", "Yacht")
                        .WithMany("Tours")
                        .HasForeignKey("YachtId");

                    b.Navigation("Company");

                    b.Navigation("Yacht");
                });

            modelBuilder.Entity("YBS2.Data.Models.TourActivity", b =>
                {
                    b.HasOne("YBS2.Data.Models.Tour", "Tour")
                        .WithMany("TourActivities")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("YBS2.Data.Models.TourDock", b =>
                {
                    b.HasOne("YBS2.Data.Models.Dock", "Dock")
                        .WithMany("TourDocks")
                        .HasForeignKey("DockId");

                    b.HasOne("YBS2.Data.Models.Tour", "Tour")
                        .WithMany("TourDocks")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dock");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("YBS2.Data.Models.TourServicePackage", b =>
                {
                    b.HasOne("YBS2.Data.Models.ServicePackage", "ServicePackage")
                        .WithMany("TourServicePackages")
                        .HasForeignKey("ServicePackageId");

                    b.HasOne("YBS2.Data.Models.Tour", "Tour")
                        .WithMany("TourServicePackages")
                        .HasForeignKey("TourId");

                    b.Navigation("ServicePackage");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("YBS2.Data.Models.Transaction", b =>
                {
                    b.HasOne("YBS2.Data.Models.Booking", "Booking")
                        .WithMany("Transactions")
                        .HasForeignKey("BookingId");

                    b.HasOne("YBS2.Data.Models.MembershipRegistration", "MembershipRegistration")
                        .WithOne("Transaction")
                        .HasForeignKey("YBS2.Data.Models.Transaction", "MembershipRegistrationId");

                    b.Navigation("Booking");

                    b.Navigation("MembershipRegistration");
                });

            modelBuilder.Entity("YBS2.Data.Models.UpdateRequest", b =>
                {
                    b.HasOne("YBS2.Data.Models.Account", "Account")
                        .WithMany("UpdateRequests")
                        .HasForeignKey("ApproverId");

                    b.HasOne("YBS2.Data.Models.Company", "Company")
                        .WithMany("UpdateRequests")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS2.Data.Models.Wallet", b =>
                {
                    b.HasOne("YBS2.Data.Models.Member", "Member")
                        .WithOne("Wallet")
                        .HasForeignKey("YBS2.Data.Models.Wallet", "MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("YBS2.Data.Models.Yacht", b =>
                {
                    b.HasOne("YBS2.Data.Models.Company", "Company")
                        .WithMany("Yachts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("YBS2.Data.Models.Account", b =>
                {
                    b.Navigation("Company");

                    b.Navigation("Member");

                    b.Navigation("Notitokens");

                    b.Navigation("UpdateRequests");
                });

            modelBuilder.Entity("YBS2.Data.Models.Booking", b =>
                {
                    b.Navigation("BookingActivities");

                    b.Navigation("Passengers");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("YBS2.Data.Models.Company", b =>
                {
                    b.Navigation("Docks");

                    b.Navigation("ServicePackages");

                    b.Navigation("Tours");

                    b.Navigation("UpdateRequests");

                    b.Navigation("Yachts");
                });

            modelBuilder.Entity("YBS2.Data.Models.Dock", b =>
                {
                    b.Navigation("TourDocks");
                });

            modelBuilder.Entity("YBS2.Data.Models.Member", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("MembershipRegistrations");

                    b.Navigation("Wallet")
                        .IsRequired();
                });

            modelBuilder.Entity("YBS2.Data.Models.MembershipPackage", b =>
                {
                    b.Navigation("MembershipRegistrations");
                });

            modelBuilder.Entity("YBS2.Data.Models.MembershipRegistration", b =>
                {
                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("YBS2.Data.Models.Service", b =>
                {
                    b.Navigation("ServicePackageItems");
                });

            modelBuilder.Entity("YBS2.Data.Models.ServicePackage", b =>
                {
                    b.Navigation("ServicePackageItems");

                    b.Navigation("TourServicePackages");
                });

            modelBuilder.Entity("YBS2.Data.Models.Tour", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("TourActivities");

                    b.Navigation("TourDocks");

                    b.Navigation("TourServicePackages");
                });

            modelBuilder.Entity("YBS2.Data.Models.Yacht", b =>
                {
                    b.Navigation("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
